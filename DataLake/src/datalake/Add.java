/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package datalake;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Frame;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Writer;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Wojtek
 */
public class Add extends javax.swing.JFrame {

    /**
     * Creates new form Add
     * @param fN
     */
    public Add(String fN) {
        initComponents();
        fileName = fN;
         blockDateInput();
    }
     Date dateStart;
             Date dateEnd ;
            String localization;
            Boolean duplicateData = false;
    String fileName;
    
    NewFile newFile = new NewFile();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add new file");

        jLabel1.setText("Date start");

        jLabel4.setText("Date finish");

        jLabel5.setText("Localization");

        jButton1.setText("Add new file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        jDateChooser2.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jDateChooser2.getDate()!=null && jDateChooser1.getDate()!=null)
        if(jTextField5.getText().length()>0) {//isnieje miasto Y i A 
        try {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
         
            newFile.name = fileName.split("\\.")[0];
            newFile.type = fileName.split("\\.")[1];
            newFile.dateStart = jDateChooser1.getDate();
            newFile.dateEnd =   sdf.parse(sdf.format(jDateChooser2.getDate())); //pobierało godzinę nie wiem czemu
            newFile.localization = jTextField5.getText();
            
           duplicateData= checkDoubleInfo(newFile.dateStart,newFile.dateEnd,newFile.localization);
            
            if(duplicateData == true)
            {  DateFormat dF = new SimpleDateFormat("dd-MM-yyyy");
               String dateToFileStart = dF.format(newFile.dateStart);
               String dateToFileEnd = dF.format(newFile.dateEnd);
                  Writer output;
            output = new BufferedWriter(new FileWriter("jezioroDanych//meta.txt", true));
            output.write(newFile.name + " " + newFile.type + " " + dateToFileStart + " " + dateToFileEnd + " " + newFile.localization + "\n");
           
              output.close();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Find.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Find.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else{
           Frame frame = new Frame();
               JOptionPane.showMessageDialog(frame, "Za krótka nazwa lokalizacji.",
                       "Komunikat",JOptionPane.ERROR_MESSAGE);   
        }
        else
        {
            Frame frame = new Frame();
               JOptionPane.showMessageDialog(frame, "Brak wyboru daty.",
                       "Komunikat",JOptionPane.ERROR_MESSAGE);   
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        // TODO add your handling code here:
        //reset końca zakresu 
             if ("date".equals(evt.getPropertyName())) {
                     jDateChooser2.setEnabled(true);
             if(jDateChooser2.getDate()!=null && jDateChooser1.getDate().after(jDateChooser2.getDate())) 
                 jDateChooser2.setDate(null);
                jDateChooser2.setMinSelectableDate(jDateChooser1.getDate());   
            }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    public Boolean checkDoubleInfo(Date dateStartUser , Date dateEndUser, String localizationUser) 
            throws FileNotFoundException, IOException, ParseException
    {
      
        int result=1;
        int rowNumber=1;
              BufferedReader reader;
              DateFormat dF = new SimpleDateFormat("dd-MM-yyyy");
                String[] data = null;
              reader = new BufferedReader(new FileReader("jezioroDanych//meta.txt"));
              String line;
              while ((line = reader.readLine()) != null) {
                data = line.split(" ");
                int numberSpace = line.split(" ").length; //liczenie spacji w lini
                //czytanie danych
                
            dateStart = dF.parse(data[numberSpace-3]); //uwzględniamy to że są spacje w nazwie pliku
             dateEnd = dF.parse(data[numberSpace-2]);
            localization = data[numberSpace-1];
            if( localization == null ? localizationUser == null : localization.equals(localizationUser))   
                if(!(dateEndUser.before(dateStart) || dateStartUser.after(dateEnd))){
                    
                    reader.close();
            
                   if(result!=0) //pobieramy tylko raz zgode na zapis
                   { 
            Object[] msg = {"Istnieją już dane dla podanej lokalizacji "+localization+" "
                    + "z taką\nsamą datą jakie mają zostać wprowadzone.","Czy chcesz nadpisać dane dla istniejących dat?"};
        Frame frame = new Frame();
            result = JOptionPane.showConfirmDialog(
    frame,msg, "Ostrzeżenie",JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                   }
if (result == JOptionPane.YES_OPTION){
    //edycja
   
    if((dateStartUser.before(dateStart) || dateStartUser.equals(dateStart))  
            && (dateEndUser.after(dateEnd) || dateEndUser.equals(dateEnd))) //usunąć linijkę 
        deleteLine(rowNumber);
   else if((dateStartUser.before(dateStart) || dateStartUser.equals(dateStart) )
            && (dateEndUser.after(dateStart) || dateEndUser.equals(dateStart))) 
      //zmienić początek istniejącego o jeden dzień od zakończeania nowego 
        changeStartDateinMetaFile(rowNumber,dateEndUser);
   else if((dateStartUser.before(dateEnd) || dateStartUser.equals(dateEnd))
            && (dateEndUser.after(dateEnd) || dateEndUser.equals(dateEnd))) 
//zmieniamy koniec istniejącego o jeden dzień do ropzoczecia nowego 
          changeEndDateinMetaFile(rowNumber,dateStartUser);

     else if(dateStartUser.after(dateStart) && dateEndUser.before(dateEnd) ) //zmieniamy koniec istniejącego o jeden dzień do ropzoczecia nowego 
          changeDateinMetaFile(rowNumber,dateEndUser,dateStartUser);

    reader = new BufferedReader(new FileReader("jezioroDanych//meta.txt"));
    for(int i=0;i<rowNumber;i++)
        reader.readLine();
    
 }
else
    return false;

                }
            
            rowNumber++;
              }
              reader.close();
              return  true;
    }                                                       //od usera te daty
    //ustawienie gdy zakrres nowy wchodzi w zakres obecny np (2.10-3.10)-> (1.10-4.10) 
     public static void changeDateinMetaFile(int rowNumber, Date endDateNew , Date startDateNew) throws IOException
    {
        
        Calendar c = Calendar.getInstance();
        c.setTime(endDateNew);
        c.add(Calendar.DAY_OF_MONTH, 1); 
        endDateNew= c.getTime();
        
        c.setTime(startDateNew);
        c.add(Calendar.DAY_OF_MONTH, -1); 
        startDateNew = c.getTime();
        
        DateFormat dF = new SimpleDateFormat("dd-MM-yyyy");
               String dateEndToFile = dF.format(startDateNew);
                String dateStartToFile = dF.format(endDateNew);

       String tempFile = "jezioroDanych//metaCopy.txt";
       String originalFile = "jezioroDanych//meta.txt";
       
       File oldFile = new File(originalFile);
       File newFile = new File(tempFile);
       
        String currentLine;
        String dataReader[];
        
         String dataCopyReader[];

        try (FileWriter fw = new FileWriter(tempFile,true)) {
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            
            FileReader fr = new FileReader(originalFile);
            BufferedReader br = new BufferedReader (fr);
            
            int rowNumberNew =1;
            
            while((currentLine = br.readLine()) !=null)
            {
                if(rowNumberNew == rowNumber)
                {
                    dataReader = currentLine.split(" ");
                    dataCopyReader = currentLine.split(" ");
                    
                int numberSpace = currentLine.split(" ").length;

                dataReader[numberSpace-3]=dateStartToFile;
                dataCopyReader[numberSpace-2]=dateEndToFile;
                // pw.print("\n");
                for(int i=0 ;i<numberSpace;i++)
                {  
                    pw.print(dataReader[i]);
                    if((i+1)!=numberSpace)
                pw.print(" ");
                }
                pw.print("\n");
                
                 for(int i=0 ;i<numberSpace;i++)
                {  
                    pw.print(dataCopyReader[i]);
                    if((i+1)!=numberSpace)
                pw.print(" ");
                }
                pw.print("\n");
                
                }
                else
                  pw.println(currentLine);
                rowNumberNew++;
            }
            pw.flush();
            pw.close();
            fr.close();
            br.close();
            bw.close();
            fw.close();
        }
       oldFile.delete();
       File dump = new File(originalFile);
       newFile.renameTo(dump);
        
        
    }
    
     // sytuacja gdy nowy (2.10-4.10)-> obecny: (3.10-6.10)
     public static void changeStartDateinMetaFile(int rowNumber, Date endDateNew) throws IOException
    {
        
        //dateEndUser o 1 dzień do przodu
        Calendar c = Calendar.getInstance();
        c.setTime(endDateNew);
        
        c.add(Calendar.DAY_OF_MONTH, 1); 
        
        endDateNew= c.getTime();
        
        DateFormat dF = new SimpleDateFormat("dd-MM-yyyy");
               String dateToFile = dF.format(endDateNew);

       String tempFile = "jezioroDanych//metaCopy.txt";
       String originalFile = "jezioroDanych//meta.txt";
       
       File oldFile = new File(originalFile);
       File newFile = new File(tempFile);
       
        String currentLine;
        String dataReader[];

        try (FileWriter fw = new FileWriter(tempFile,true)) {
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            
            FileReader fr = new FileReader(originalFile);
            BufferedReader br = new BufferedReader (fr);
            
            int rowNumberNew =1;
            
            while((currentLine = br.readLine()) !=null)
            {
                if(rowNumberNew == rowNumber)
                {
                    dataReader = currentLine.split(" ");
                int numberSpace = currentLine.split(" ").length;

                dataReader[numberSpace-3]=dateToFile;
                // pw.print("\n");
                for(int i=0 ;i<numberSpace;i++)
                {  
                    pw.print(dataReader[i]);
                    if((i+1)!=numberSpace)
                pw.print(" ");
                }
                pw.print("\n");
                }
                else
                  pw.println(currentLine);
                rowNumberNew++;
            }
            pw.flush();
            pw.close();
            fr.close();
            br.close();
            bw.close();
            fw.close();
        }
       oldFile.delete();
       File dump = new File(originalFile);
       newFile.renameTo(dump);
        
        
    }
       // sytuacja gdy nowy (2.10-4.10)-> obecny: (1.10-3.10)
      public static void changeEndDateinMetaFile(int rowNumber, Date startDateNew) throws IOException
    {
        
        //dateStartUser o 1 dzień do tyłu
        Calendar c = Calendar.getInstance();
        c.setTime(startDateNew);
        
        c.add(Calendar.DAY_OF_MONTH, -1); 
        
        startDateNew= c.getTime();
        
        DateFormat dF = new SimpleDateFormat("dd-MM-yyyy");
               String dateToFile = dF.format(startDateNew);

       String tempFile = "jezioroDanych//metaCopy.txt";
       String originalFile = "jezioroDanych//meta.txt";
       
       File oldFile = new File(originalFile);
       File newFile = new File(tempFile);
       
        String currentLine;
        String dataReader[];

        try (FileWriter fw = new FileWriter(tempFile,true)) {
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            
            FileReader fr = new FileReader(originalFile);
            BufferedReader br = new BufferedReader (fr);
            
            int rowNumberNew =1;
            
            while((currentLine = br.readLine()) !=null)
            {
                if(rowNumberNew == rowNumber)
                {
                    dataReader = currentLine.split(" ");
                int numberSpace = currentLine.split(" ").length;

                dataReader[numberSpace-2]=dateToFile;
                
                 
                for(int i=0 ;i<numberSpace;i++)
                {  
                    pw.print(dataReader[i]);
                    if((i+1)!=numberSpace)
                pw.print(" ");
                }
                    pw.print("\n");
                }
                else
                  pw.println(currentLine);
                rowNumberNew++;
            }
            pw.flush();
            pw.close();
            fr.close();
            br.close();
            bw.close();
            fw.close();
        }
       oldFile.delete();
       File dump = new File(originalFile);
       newFile.renameTo(dump);
        
        
    }

    /**
     * @param args the command line arguments
     */
         // sytuacja gdy nowy (2.10-7.10)-> obecny: (3.10-4.10) 
      //uwzględniamy też : (2.10-7.10)-> obecny: (3.10-7.10)
    public static void deleteLine(int rowNumber) throws IOException
    {
       String tempFile = "jezioroDanych//metaCopy.txt";
       String originalFile = "jezioroDanych//meta.txt";
       
       File oldFile = new File(originalFile);
       File newFile = new File(tempFile);
        String currentLine;
       // String dataRead[];
        try (FileWriter fw = new FileWriter(tempFile,true)) {
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            
            FileReader fr = new FileReader(originalFile);
            BufferedReader br = new BufferedReader (fr);
            
            int rowNumberNew =1;
            
            while((currentLine = br.readLine()) !=null)
            {
                //można w for zrobić
                if(rowNumberNew != rowNumber)
                {
                    pw.println(currentLine);
                    
                }
                rowNumberNew++;
            }
            pw.flush();
            pw.close();
            fr.close();
            br.close();
            bw.close();
            fw.close();
        }
       oldFile.delete();
       File dump = new File(originalFile);
       newFile.renameTo(dump);
        
        
    }
  public static void   blockDateInput()
  {
      JTextFieldDateEditor editor = (JTextFieldDateEditor) jDateChooser1.getDateEditor();
            editor.setEditable(false);
      editor = (JTextFieldDateEditor) jDateChooser2.getDateEditor();
          editor.setEditable(false);
  }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
      
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add("").setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private static com.toedter.calendar.JDateChooser jDateChooser1;
    private static com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
